/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.vista_grafico;

import com.mycompany.dao_grafico.DAOPregunta;
import com.mycompany.modelo_grafico.Opcion;
import com.mycompany.modelo_grafico.Pregunta;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Dam
 */
public class Vista_MiPanel_Actualizar extends javax.swing.JPanel {

    private Vista_MiVentana miVentana;
    private Vista_MiPanel_Inicio miPanelInicio;

    private ArrayList<Pregunta> listaPreguntas;

    private DefaultListModel modelo;

    private Pregunta pregunta;

    /**
     * Creates new form Vista_MiPanel_Actualizar
     */
    public Vista_MiPanel_Actualizar(Vista_MiVentana miVentana) {
        initComponents();

        this.miVentana = miVentana;
        this.miPanelInicio = new Vista_MiPanel_Inicio(this.miVentana);

        this.actualizarLista();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoRadio = new javax.swing.ButtonGroup();
        btnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaJPreguntas = new javax.swing.JList<>();
        btnActualizar = new javax.swing.JButton();
        txtFieldPregunta = new javax.swing.JTextField();
        radioOpcion4 = new javax.swing.JRadioButton();
        radioOpcion3 = new javax.swing.JRadioButton();
        radioOpcion2 = new javax.swing.JRadioButton();
        radioOpcion1 = new javax.swing.JRadioButton();
        txtFieldOpcion4 = new javax.swing.JTextField();
        txtFieldOpcion3 = new javax.swing.JTextField();
        txtFieldOpcion2 = new javax.swing.JTextField();
        txtFieldOpcion1 = new javax.swing.JTextField();

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        listaJPreguntas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaJPreguntasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaJPreguntas);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        txtFieldPregunta.setText("Escriba una pregunta...");
        txtFieldPregunta.setEnabled(false);
        txtFieldPregunta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFieldPreguntaMouseClicked(evt);
            }
        });

        grupoRadio.add(radioOpcion4);
        radioOpcion4.setEnabled(false);

        grupoRadio.add(radioOpcion3);
        radioOpcion3.setEnabled(false);

        grupoRadio.add(radioOpcion2);
        radioOpcion2.setEnabled(false);

        grupoRadio.add(radioOpcion1);
        radioOpcion1.setEnabled(false);

        txtFieldOpcion4.setText("Escriba respuesta...");
        txtFieldOpcion4.setEnabled(false);
        txtFieldOpcion4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFieldOpcion4MouseClicked(evt);
            }
        });

        txtFieldOpcion3.setText("Escriba respuesta...");
        txtFieldOpcion3.setEnabled(false);
        txtFieldOpcion3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFieldOpcion3MouseClicked(evt);
            }
        });

        txtFieldOpcion2.setText("Escriba respuesta...");
        txtFieldOpcion2.setEnabled(false);
        txtFieldOpcion2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFieldOpcion2MouseClicked(evt);
            }
        });

        txtFieldOpcion1.setText("Escriba respuesta...");
        txtFieldOpcion1.setEnabled(false);
        txtFieldOpcion1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFieldOpcion1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVolver)
                        .addGap(2, 2, 2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioOpcion2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(radioOpcion1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(radioOpcion3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(radioOpcion4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldOpcion3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                                    .addComponent(txtFieldOpcion4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFieldOpcion2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFieldOpcion1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(txtFieldPregunta)))))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFieldPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldOpcion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioOpcion1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldOpcion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioOpcion2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioOpcion3)
                            .addComponent(txtFieldOpcion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioOpcion4)
                            .addComponent(txtFieldOpcion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVolver)
                    .addComponent(btnActualizar))
                .addGap(81, 81, 81))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:

        txtFieldPregunta.setText("Escriba una pregunta...");
        txtFieldOpcion1.setText("Escriba respuesta...");
        txtFieldOpcion2.setText("Escriba respuesta...");
        txtFieldOpcion3.setText("Escriba respuesta...");
        txtFieldOpcion4.setText("Escriba respuesta...");

        this.miVentana.cambiarPanel(this.miPanelInicio);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        if (!(txtFieldPregunta.getText().equals("Escriba una pregunta...") || txtFieldPregunta.getText().equals("")
                || txtFieldOpcion1.getText().equals("Escriba respuesta...") || txtFieldOpcion1.getText().equals("")
                || txtFieldOpcion2.getText().equals("Escriba respuesta...") || txtFieldOpcion2.getText().equals("")
                || txtFieldOpcion3.getText().equals("Escriba respuesta...") || txtFieldOpcion3.getText().equals("")
                || txtFieldOpcion4.getText().equals("Escriba respuesta...") || txtFieldOpcion4.getText().equals(""))) {

            if (radioOpcion1.isSelected()) {

                pregunta = new Pregunta(
                        listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getId_pregunta(),
                        txtFieldPregunta.getText(),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion1().getId_opcion(), txtFieldOpcion1.getText(), true),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion2().getId_opcion(), txtFieldOpcion2.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion3().getId_opcion(), txtFieldOpcion3.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion4().getId_opcion(), txtFieldOpcion4.getText(), false)
                );

                int comp = DAOPregunta.getInstance().updatePregunta(pregunta);

                if (comp == 0) {
                    this.actualizarLista();

                    JOptionPane.showConfirmDialog(this, "Se ha actualizado la pregunta correctamente", "Actualizado correcto", JOptionPane.DEFAULT_OPTION);
                } else if (comp == 1) {
                    JOptionPane.showConfirmDialog(this, "La pregunta ya se encutra en la bd (CLAVE DUPLICADA)", "Clave duplicada", JOptionPane.DEFAULT_OPTION);
                } else {
                    JOptionPane.showConfirmDialog(this, "Ha ocurrido un error inesperado con la bd", "Error con la bd", JOptionPane.DEFAULT_OPTION);
                }

            } else if (radioOpcion2.isSelected()) {

                pregunta = new Pregunta(
                        listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getId_pregunta(),
                        txtFieldPregunta.getText(),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion1().getId_opcion(), txtFieldOpcion1.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion2().getId_opcion(), txtFieldOpcion2.getText(), true),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion3().getId_opcion(), txtFieldOpcion3.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion4().getId_opcion(), txtFieldOpcion4.getText(), false)
                );

                int comp = DAOPregunta.getInstance().updatePregunta(pregunta);

                if (comp == 0) {
                    this.actualizarLista();

                    JOptionPane.showConfirmDialog(this, "Se ha actualizado la pregunta correctamente", "Actualizado correcto", JOptionPane.DEFAULT_OPTION);
                } else if (comp == 1) {
                    JOptionPane.showConfirmDialog(this, "La pregunta ya se encutra en la bd (CLAVE DUPLICADA)", "Clave duplicada", JOptionPane.DEFAULT_OPTION);
                } else {
                    JOptionPane.showConfirmDialog(this, "Ha ocurrido un error inesperado con la bd", "Error con la bd", JOptionPane.DEFAULT_OPTION);
                }

            } else if (radioOpcion3.isSelected()) {

                pregunta = new Pregunta(
                        listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getId_pregunta(),
                        txtFieldPregunta.getText(),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion1().getId_opcion(), txtFieldOpcion1.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion2().getId_opcion(), txtFieldOpcion2.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion3().getId_opcion(), txtFieldOpcion3.getText(), true),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion4().getId_opcion(), txtFieldOpcion4.getText(), false)
                );

                int comp = DAOPregunta.getInstance().updatePregunta(pregunta);

                if (comp == 0) {
                    this.actualizarLista();

                    JOptionPane.showConfirmDialog(this, "Se ha actualizado la pregunta correctamente", "Actualizado correcto", JOptionPane.DEFAULT_OPTION);
                } else if (comp == 1) {
                    JOptionPane.showConfirmDialog(this, "La pregunta ya se encutra en la bd (CLAVE DUPLICADA)", "Clave duplicada", JOptionPane.DEFAULT_OPTION);
                } else {
                    JOptionPane.showConfirmDialog(this, "Ha ocurrido un error inesperado con la bd", "Error con la bd", JOptionPane.DEFAULT_OPTION);
                }

            } else if (radioOpcion4.isSelected()) {

                pregunta = new Pregunta(
                        listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getId_pregunta(),
                        txtFieldPregunta.getText(),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion1().getId_opcion(), txtFieldOpcion1.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion2().getId_opcion(), txtFieldOpcion2.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion3().getId_opcion(), txtFieldOpcion3.getText(), false),
                        new Opcion(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion4().getId_opcion(), txtFieldOpcion4.getText(), true)
                );

                int comp = DAOPregunta.getInstance().updatePregunta(pregunta);

                if (comp == 0) {
                    this.actualizarLista();

                    JOptionPane.showConfirmDialog(this, "Se ha actualizado la pregunta correctamente", "Actualizado correcto", JOptionPane.DEFAULT_OPTION);
                } else if (comp == 1) {
                    JOptionPane.showConfirmDialog(this, "La pregunta ya se encutra en la bd (CLAVE DUPLICADA)", "Clave duplicada", JOptionPane.DEFAULT_OPTION);
                } else {
                    JOptionPane.showConfirmDialog(this, "Ha ocurrido un error inesperado con la bd", "Error con la bd", JOptionPane.DEFAULT_OPTION);
                }

            }

        } else {

            JOptionPane.showConfirmDialog(this, "No se ha actualizado la bbdd", "Actualizado erroneo", JOptionPane.DEFAULT_OPTION);

        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtFieldPreguntaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFieldPreguntaMouseClicked
        // TODO add your handling code here:
        txtFieldPregunta.setText("");
    }//GEN-LAST:event_txtFieldPreguntaMouseClicked

    private void listaJPreguntasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaJPreguntasMouseClicked
        // TODO add your handling code here:

        txtFieldPregunta.setEnabled(true);
        txtFieldOpcion1.setEnabled(true);
        txtFieldOpcion2.setEnabled(true);
        txtFieldOpcion3.setEnabled(true);
        txtFieldOpcion4.setEnabled(true);
        radioOpcion1.setEnabled(true);
        radioOpcion2.setEnabled(true);
        radioOpcion3.setEnabled(true);
        radioOpcion4.setEnabled(true);

        this.txtFieldPregunta.setText(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getTituloPreg());
        if (listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion1().isCorrecto()) {
            radioOpcion1.setSelected(true);
        } else if (listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion2().isCorrecto()) {
            radioOpcion2.setSelected(true);
        } else if (listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion3().isCorrecto()) {
            radioOpcion3.setSelected(true);
        } else if (listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion4().isCorrecto()) {
            radioOpcion4.setSelected(true);
        }

        txtFieldOpcion1.setText(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion1().getTxtOpcion());
        txtFieldOpcion2.setText(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion2().getTxtOpcion());
        txtFieldOpcion3.setText(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion3().getTxtOpcion());
        txtFieldOpcion4.setText(listaPreguntas.get(listaJPreguntas.getSelectedIndex()).getOpcion4().getTxtOpcion());

    }//GEN-LAST:event_listaJPreguntasMouseClicked

    private void txtFieldOpcion1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFieldOpcion1MouseClicked
        txtFieldOpcion1.setText("");
    }//GEN-LAST:event_txtFieldOpcion1MouseClicked

    private void txtFieldOpcion2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFieldOpcion2MouseClicked
        txtFieldOpcion2.setText("");
    }//GEN-LAST:event_txtFieldOpcion2MouseClicked

    private void txtFieldOpcion3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFieldOpcion3MouseClicked
        txtFieldOpcion3.setText("");
    }//GEN-LAST:event_txtFieldOpcion3MouseClicked

    private void txtFieldOpcion4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFieldOpcion4MouseClicked
        txtFieldOpcion4.setText("");
    }//GEN-LAST:event_txtFieldOpcion4MouseClicked

    private void actualizarLista() {
        listaPreguntas = DAOPregunta.getInstance().getPreguntas(miVentana.getUsuarioActual());

        this.modelo = new DefaultListModel();

        for (int i = 0; i < listaPreguntas.size(); i++) {
            this.modelo.addElement(listaPreguntas.get(i).getTituloPreg());
        }

        this.listaJPreguntas.setModel(this.modelo);

        this.updateUI();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnVolver;
    private javax.swing.ButtonGroup grupoRadio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaJPreguntas;
    private javax.swing.JRadioButton radioOpcion1;
    private javax.swing.JRadioButton radioOpcion2;
    private javax.swing.JRadioButton radioOpcion3;
    private javax.swing.JRadioButton radioOpcion4;
    private javax.swing.JTextField txtFieldOpcion1;
    private javax.swing.JTextField txtFieldOpcion2;
    private javax.swing.JTextField txtFieldOpcion3;
    private javax.swing.JTextField txtFieldOpcion4;
    private javax.swing.JTextField txtFieldPregunta;
    // End of variables declaration//GEN-END:variables
}
